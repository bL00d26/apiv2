service: ${self:custom.app.name}-orders-mngmt-api-g

frameworkVersion: ${self:custom.frameworkVersion}

custom: ${file(../serverless.common.yml):custom}

plugins:
  - serverless-latest-layer-version
  - serverless-offline

provider:
  name: aws
  region: ${self:custom.region}
  profile: ${self:custom.profile}
  stage: ${self:custom.stage}
  runtime: ${self:custom.runtime}
  layers:
    - { Ref: OrdersLambdaLayer }
  environment:
    ENV: ${self:custom.stage}

package:
  individually: true
  patterns:
    - '!**/tsconfig.json'
    - '!**/jest.config.js'
    - '!**/package.json'
    - '!**/package-lock.json'
    - "!**/__tests__/**"
    - "!**/__mocks__/**"
    - "!**/*.d.ts"
    - "!**/node_modules"

functions:
  get-route:
    handler: dist/src/serverless.routeGet
    events:
      - httpApi: 
          method: GET 
          path: /test/{id}
  post-route:
    handler: dist/src/serverless.routePost
    package:
      patterns: 
        - "./src/serverless"
        - ${self:custom.watchFiles.${self:custom.stage}, "!**/*.ts"}
    events:
      - httpApi: 
          method: POST 
          path: /
layers:
  Orders:
    path: dist/layer 
    name: ${self:custom.app.name}-orders-mngmt-apig-${self:custom.stage}
    retain: false
    package:
      patterns:
        - "!./package.json"
        - "!./package-lock.json"
